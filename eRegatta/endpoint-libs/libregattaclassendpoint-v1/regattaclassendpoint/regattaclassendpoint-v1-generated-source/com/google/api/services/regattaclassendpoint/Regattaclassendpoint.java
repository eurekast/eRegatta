/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-06-05 16:09:48 UTC)
 * on 2013-06-18 at 20:48:55 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.regattaclassendpoint;

/**
 * Service definition for Regattaclassendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RegattaclassendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Regattaclassendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 14,
        "You are currently running with version %s of google-api-client. " +
        "You need version 1.14 of google-api-client to run version " +
        "1.14.2-beta of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://eregatta.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "regattaclassendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Regattaclassendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Regattaclassendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the RegattaClassEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Regattaclassendpoint regattaclassendpoint = new Regattaclassendpoint(...);}
   *   {@code Regattaclassendpoint.RegattaClassEndpoint.List request = regattaclassendpoint.regattaClassEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public RegattaClassEndpoint regattaClassEndpoint() {
    return new RegattaClassEndpoint();
  }

  /**
   * The "regattaClassEndpoint" collection of methods.
   */
  public class RegattaClassEndpoint {

    /**
     * Create a request for the method "regattaClassEndpoint.downloadRegattaClasses".
     *
     * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
     * any optional parameters, call the {@link DownloadRegattaClasses#execute()} method to invoke the
     * remote operation.
     *
     * @return the request
     */
    public DownloadRegattaClasses downloadRegattaClasses() throws java.io.IOException {
      DownloadRegattaClasses result = new DownloadRegattaClasses();
      initialize(result);
      return result;
    }

    public class DownloadRegattaClasses extends RegattaclassendpointRequest<com.google.api.services.regattaclassendpoint.model.RegattaClassCollection> {

      private static final String REST_PATH = "downloadRegattaClasses";

      /**
       * Create a request for the method "regattaClassEndpoint.downloadRegattaClasses".
       *
       * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
       * any optional parameters, call the {@link DownloadRegattaClasses#execute()} method to invoke the
       * remote operation. <p> {@link DownloadRegattaClasses#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected DownloadRegattaClasses() {
        super(Regattaclassendpoint.this, "GET", REST_PATH, null, com.google.api.services.regattaclassendpoint.model.RegattaClassCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public DownloadRegattaClasses setAlt(java.lang.String alt) {
        return (DownloadRegattaClasses) super.setAlt(alt);
      }

      @Override
      public DownloadRegattaClasses setFields(java.lang.String fields) {
        return (DownloadRegattaClasses) super.setFields(fields);
      }

      @Override
      public DownloadRegattaClasses setKey(java.lang.String key) {
        return (DownloadRegattaClasses) super.setKey(key);
      }

      @Override
      public DownloadRegattaClasses setOauthToken(java.lang.String oauthToken) {
        return (DownloadRegattaClasses) super.setOauthToken(oauthToken);
      }

      @Override
      public DownloadRegattaClasses setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DownloadRegattaClasses) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DownloadRegattaClasses setQuotaUser(java.lang.String quotaUser) {
        return (DownloadRegattaClasses) super.setQuotaUser(quotaUser);
      }

      @Override
      public DownloadRegattaClasses setUserIp(java.lang.String userIp) {
        return (DownloadRegattaClasses) super.setUserIp(userIp);
      }

      @Override
      public DownloadRegattaClasses set(String parameterName, Object value) {
        return (DownloadRegattaClasses) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "getRegattaClass".
   *
   * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
   * any optional parameters, call the {@link GetRegattaClass#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetRegattaClass getRegattaClass(java.lang.Long id) throws java.io.IOException {
    GetRegattaClass result = new GetRegattaClass(id);
    initialize(result);
    return result;
  }

  public class GetRegattaClass extends RegattaclassendpointRequest<com.google.api.services.regattaclassendpoint.model.RegattaClass> {

    private static final String REST_PATH = "regattaclass/{id}";

    /**
     * Create a request for the method "getRegattaClass".
     *
     * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
     * any optional parameters, call the {@link GetRegattaClass#execute()} method to invoke the remote
     * operation. <p> {@link GetRegattaClass#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetRegattaClass(java.lang.Long id) {
      super(Regattaclassendpoint.this, "GET", REST_PATH, null, com.google.api.services.regattaclassendpoint.model.RegattaClass.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetRegattaClass setAlt(java.lang.String alt) {
      return (GetRegattaClass) super.setAlt(alt);
    }

    @Override
    public GetRegattaClass setFields(java.lang.String fields) {
      return (GetRegattaClass) super.setFields(fields);
    }

    @Override
    public GetRegattaClass setKey(java.lang.String key) {
      return (GetRegattaClass) super.setKey(key);
    }

    @Override
    public GetRegattaClass setOauthToken(java.lang.String oauthToken) {
      return (GetRegattaClass) super.setOauthToken(oauthToken);
    }

    @Override
    public GetRegattaClass setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetRegattaClass) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetRegattaClass setQuotaUser(java.lang.String quotaUser) {
      return (GetRegattaClass) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetRegattaClass setUserIp(java.lang.String userIp) {
      return (GetRegattaClass) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetRegattaClass setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetRegattaClass set(String parameterName, Object value) {
      return (GetRegattaClass) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertRegattaClass".
   *
   * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
   * any optional parameters, call the {@link InsertRegattaClass#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.google.api.services.regattaclassendpoint.model.RegattaClass}
   * @return the request
   */
  public InsertRegattaClass insertRegattaClass(com.google.api.services.regattaclassendpoint.model.RegattaClass content) throws java.io.IOException {
    InsertRegattaClass result = new InsertRegattaClass(content);
    initialize(result);
    return result;
  }

  public class InsertRegattaClass extends RegattaclassendpointRequest<com.google.api.services.regattaclassendpoint.model.RegattaClass> {

    private static final String REST_PATH = "regattaclass";

    /**
     * Create a request for the method "insertRegattaClass".
     *
     * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
     * any optional parameters, call the {@link InsertRegattaClass#execute()} method to invoke the
     * remote operation. <p> {@link InsertRegattaClass#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.google.api.services.regattaclassendpoint.model.RegattaClass}
     * @since 1.13
     */
    protected InsertRegattaClass(com.google.api.services.regattaclassendpoint.model.RegattaClass content) {
      super(Regattaclassendpoint.this, "POST", REST_PATH, content, com.google.api.services.regattaclassendpoint.model.RegattaClass.class);
    }

    @Override
    public InsertRegattaClass setAlt(java.lang.String alt) {
      return (InsertRegattaClass) super.setAlt(alt);
    }

    @Override
    public InsertRegattaClass setFields(java.lang.String fields) {
      return (InsertRegattaClass) super.setFields(fields);
    }

    @Override
    public InsertRegattaClass setKey(java.lang.String key) {
      return (InsertRegattaClass) super.setKey(key);
    }

    @Override
    public InsertRegattaClass setOauthToken(java.lang.String oauthToken) {
      return (InsertRegattaClass) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertRegattaClass setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertRegattaClass) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertRegattaClass setQuotaUser(java.lang.String quotaUser) {
      return (InsertRegattaClass) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertRegattaClass setUserIp(java.lang.String userIp) {
      return (InsertRegattaClass) super.setUserIp(userIp);
    }

    @Override
    public InsertRegattaClass set(String parameterName, Object value) {
      return (InsertRegattaClass) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeRegattaClass".
   *
   * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
   * any optional parameters, call the {@link RemoveRegattaClass#execute()} method to invoke the
   * remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveRegattaClass removeRegattaClass(java.lang.Long id) throws java.io.IOException {
    RemoveRegattaClass result = new RemoveRegattaClass(id);
    initialize(result);
    return result;
  }

  public class RemoveRegattaClass extends RegattaclassendpointRequest<com.google.api.services.regattaclassendpoint.model.RegattaClass> {

    private static final String REST_PATH = "regattaclass/{id}";

    /**
     * Create a request for the method "removeRegattaClass".
     *
     * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
     * any optional parameters, call the {@link RemoveRegattaClass#execute()} method to invoke the
     * remote operation. <p> {@link RemoveRegattaClass#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveRegattaClass(java.lang.Long id) {
      super(Regattaclassendpoint.this, "DELETE", REST_PATH, null, com.google.api.services.regattaclassendpoint.model.RegattaClass.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveRegattaClass setAlt(java.lang.String alt) {
      return (RemoveRegattaClass) super.setAlt(alt);
    }

    @Override
    public RemoveRegattaClass setFields(java.lang.String fields) {
      return (RemoveRegattaClass) super.setFields(fields);
    }

    @Override
    public RemoveRegattaClass setKey(java.lang.String key) {
      return (RemoveRegattaClass) super.setKey(key);
    }

    @Override
    public RemoveRegattaClass setOauthToken(java.lang.String oauthToken) {
      return (RemoveRegattaClass) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveRegattaClass setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveRegattaClass) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveRegattaClass setQuotaUser(java.lang.String quotaUser) {
      return (RemoveRegattaClass) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveRegattaClass setUserIp(java.lang.String userIp) {
      return (RemoveRegattaClass) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveRegattaClass setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveRegattaClass set(String parameterName, Object value) {
      return (RemoveRegattaClass) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateRegattaClass".
   *
   * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
   * any optional parameters, call the {@link UpdateRegattaClass#execute()} method to invoke the
   * remote operation.
   *
   * @param content the {@link com.google.api.services.regattaclassendpoint.model.RegattaClass}
   * @return the request
   */
  public UpdateRegattaClass updateRegattaClass(com.google.api.services.regattaclassendpoint.model.RegattaClass content) throws java.io.IOException {
    UpdateRegattaClass result = new UpdateRegattaClass(content);
    initialize(result);
    return result;
  }

  public class UpdateRegattaClass extends RegattaclassendpointRequest<com.google.api.services.regattaclassendpoint.model.RegattaClass> {

    private static final String REST_PATH = "regattaclass";

    /**
     * Create a request for the method "updateRegattaClass".
     *
     * This request holds the parameters needed by the the regattaclassendpoint server.  After setting
     * any optional parameters, call the {@link UpdateRegattaClass#execute()} method to invoke the
     * remote operation. <p> {@link UpdateRegattaClass#initialize(com.google.api.client.googleapis.ser
     * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param content the {@link com.google.api.services.regattaclassendpoint.model.RegattaClass}
     * @since 1.13
     */
    protected UpdateRegattaClass(com.google.api.services.regattaclassendpoint.model.RegattaClass content) {
      super(Regattaclassendpoint.this, "PUT", REST_PATH, content, com.google.api.services.regattaclassendpoint.model.RegattaClass.class);
    }

    @Override
    public UpdateRegattaClass setAlt(java.lang.String alt) {
      return (UpdateRegattaClass) super.setAlt(alt);
    }

    @Override
    public UpdateRegattaClass setFields(java.lang.String fields) {
      return (UpdateRegattaClass) super.setFields(fields);
    }

    @Override
    public UpdateRegattaClass setKey(java.lang.String key) {
      return (UpdateRegattaClass) super.setKey(key);
    }

    @Override
    public UpdateRegattaClass setOauthToken(java.lang.String oauthToken) {
      return (UpdateRegattaClass) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateRegattaClass setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateRegattaClass) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateRegattaClass setQuotaUser(java.lang.String quotaUser) {
      return (UpdateRegattaClass) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateRegattaClass setUserIp(java.lang.String userIp) {
      return (UpdateRegattaClass) super.setUserIp(userIp);
    }

    @Override
    public UpdateRegattaClass set(String parameterName, Object value) {
      return (UpdateRegattaClass) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Regattaclassendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Regattaclassendpoint}. */
    @Override
    public Regattaclassendpoint build() {
      return new Regattaclassendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RegattaclassendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRegattaclassendpointRequestInitializer(
        RegattaclassendpointRequestInitializer regattaclassendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(regattaclassendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
